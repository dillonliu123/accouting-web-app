{"ast":null,"code":"var _jsxFileName = \"/Users/dillonliu/Develop/GitHub/accouting-web-app/src/components/pages/Accounts.js\",\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Title from \"../Title\";\nimport Button from \"@material-ui/core/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  },\n  addButton: {\n    marginTop: theme.spacing(4),\n    marginLeft: theme.spacing(5),\n    fontSize: 25,\n    height: 41\n  },\n  container: {\n    width: \"100%\"\n  },\n  input: {\n    border: \"1px solid #ced4da\",\n    padding: \"10px 26px 10px 12px\",\n    position: \"relative\",\n    fontSize: \"16px\",\n    transition: \"border-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n    fontFamily: \"-apple-system,BlinkMacSystemFont\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#fff\",\n    marginTop: 25\n  }\n}));\n\nfunction Accounts(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  let accountName;\n  const [type, setType] = React.useState(\"Asset\");\n  const [drcr, setdrcr] = React.useState(\"DR\");\n\n  const handleAdd = () => {\n    props.setAccounts(props.accounts.concat([accountName, type, drcr]));\n    alert(props.accounts);\n  };\n\n  const AddingAccountForm = () => {\n    _s();\n\n    const classes = useStyles();\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.margin,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          style: {\n            transform: \"translate(0, 1.5px) scale(0.75)\"\n          },\n          children: \"Account Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.input,\n          ref: a => accountName = a\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.margin,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: type,\n          input: /*#__PURE__*/_jsxDEV(BootstrapInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 32\n          }, this),\n          onChange: event => {\n            setType(event.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Asset\",\n            children: \"Asset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Liability\",\n            children: \"Liability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"Equity\",\n            children: \"Equity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.margin,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"DR/CR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: drcr,\n          input: /*#__PURE__*/_jsxDEV(BootstrapInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 32\n          }, this),\n          onChange: event => {\n            setdrcr(event.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"DR\",\n            children: \"DR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"CR\",\n            children: \"CR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        className: classes.addButton,\n        onClick: handleAdd,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  };\n\n  _s(AddingAccountForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n    return [useStyles];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"80%\",\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      titleName: \"Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddingAccountForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Accounts, \"LETUv4fAwKgxets9Pn0Cik5JtqM=\");\n\n_c = Accounts;\nexport default Accounts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accounts\");","map":{"version":3,"sources":["/Users/dillonliu/Develop/GitHub/accouting-web-app/src/components/pages/Accounts.js"],"names":["React","FormControl","InputLabel","InputBase","Select","withStyles","TextField","MenuItem","Container","makeStyles","Title","Button","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","margin","addButton","marginLeft","height","container","width","Accounts","props","accountName","type","setType","useState","drcr","setdrcr","handleAdd","setAccounts","accounts","concat","alert","AddingAccountForm","classes","transform","a","event","target","value"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Container from \"@material-ui/core/Container\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Title from \"../Title\"\nimport Button from \"@material-ui/core/Button\";\n\nconst BootstrapInput = withStyles((theme) => ({\n    root: {\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    input: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        padding: '10px 26px 10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n            borderRadius: 4,\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1)\n    },\n    addButton: {\n        marginTop: theme.spacing(4),\n        marginLeft: theme.spacing(5),\n        fontSize: 25,\n        height: 41\n    },\n    container: {\n        width: \"100%\"\n    },\n    input: {\n        border: \"1px solid #ced4da\",\n        padding: \"10px 26px 10px 12px\",\n        position: \"relative\",\n        fontSize: \"16px\",\n        transition: \"border-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        fontFamily: \"-apple-system,BlinkMacSystemFont\",\n        borderRadius: \"4px\",\n        backgroundColor: \"#fff\",\n        marginTop: 25\n    },\n}))\n\n\nfunction Accounts(props) {\n    let accountName\n    const [type, setType] = React.useState(\"Asset\")\n    const [drcr, setdrcr] = React.useState(\"DR\")\n\n\n    const handleAdd = () => {\n        props.setAccounts(props.accounts.concat([accountName, type, drcr]))\n        alert(props.accounts)\n    }\n\n    const AddingAccountForm = () => {\n        const classes = useStyles();\n        return (\n            <Container className={classes.container}>\n                <FormControl className={classes.margin}>\n                    <InputLabel style={{transform: \"translate(0, 1.5px) scale(0.75)\"}}>Account Name</InputLabel>\n                    <input className={classes.input} ref={ (a) => accountName = a}/>\n                </FormControl>\n\n                <FormControl className={classes.margin}>\n                    <InputLabel>Type</InputLabel>\n                    <Select\n                        value={type}\n                        input={<BootstrapInput/>}\n                        onChange={(event) => {setType(event.target.value)}}\n                    >\n                        <MenuItem value=\"Asset\">Asset</MenuItem>\n                        <MenuItem value=\"Liability\">Liability</MenuItem>\n                        <MenuItem value=\"Equity\">Equity</MenuItem>\n                    </Select>\n                </FormControl>\n\n                <FormControl className={classes.margin}>\n                    <InputLabel>DR/CR</InputLabel>\n                    <Select\n                        value={drcr}\n                        input={<BootstrapInput/>}\n                        onChange={(event) => {setdrcr(event.target.value)}}\n                    >\n                        <MenuItem value=\"DR\">DR</MenuItem>\n                        <MenuItem value=\"CR\">CR</MenuItem>\n                    </Select>\n                </FormControl>\n\n                <Button variant={\"contained\"} color={\"primary\"} className={classes.addButton} onClick={handleAdd}>+</Button>\n            </Container>\n        )\n    }\n\n    return (\n        <div style={{width: \"80%\", margin: 20}}>\n            <Title titleName={\"Accounts\"}/>\n            {<AddingAccountForm />}\n        </div>\n    )\n}\n\nexport default Accounts\n\n"]},"metadata":{},"sourceType":"module"}