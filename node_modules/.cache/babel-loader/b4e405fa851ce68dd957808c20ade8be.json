{"ast":null,"code":"import _classCallCheck from \"/Users/dillonliu/Develop/GitHub/accouting-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dillonliu/Develop/GitHub/accouting-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/dillonliu/Develop/GitHub/accouting-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/dillonliu/Develop/GitHub/accouting-web-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext } from './PortalHost';\nimport { Provider as SettingsProvider, Consumer as SettingsConsumer } from '../../core/settings';\nimport { ThemeProvider, withTheme } from '../../core/theming';\n/**\n * Portal allows to render a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal>\n *     <Text>This is rendered at a different place</Text>\n *   </Portal>\n * );\n *\n * export default MyComponent;\n * ```\n */\n\nvar Portal = /*#__PURE__*/function (_React$Component) {\n  _inherits(Portal, _React$Component);\n\n  var _super = _createSuper(Portal);\n\n  function Portal() {\n    _classCallCheck(this, Portal);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Portal, [{\n    key: \"render\",\n    // @component ./PortalHost.tsx\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          theme = _this$props.theme;\n      return /*#__PURE__*/React.createElement(SettingsConsumer, null, function (settings) {\n        return /*#__PURE__*/React.createElement(PortalContext.Consumer, null, function (manager) {\n          return /*#__PURE__*/React.createElement(PortalConsumer, {\n            manager: manager\n          }, /*#__PURE__*/React.createElement(SettingsProvider, {\n            value: settings\n          }, /*#__PURE__*/React.createElement(ThemeProvider, {\n            theme: theme\n          }, children)));\n        });\n      });\n    }\n  }]);\n\n  return Portal;\n}(React.Component);\n\n_defineProperty(Portal, \"Host\", PortalHost);\n\nexport default withTheme(Portal);","map":{"version":3,"sources":["Portal.tsx"],"names":["Provider","Consumer","Portal","React","PortalHost","theme","settings","manager","withTheme"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,cAAA,MAAA,kBAAA;AACA,OAAA,UAAA,IAAA,aAAA,QAAA,cAAA;AACA,SACEA,QAAQ,IADV,gBAAA,EAEEC,QAAQ,IAFV,gBAAA,QAAA,qBAAA;AAIA,SAAA,aAAA,EAAA,SAAA,QAAA,oBAAA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IACA,M;;;;;;;;;;;;;AACE;6BAGS;AAAA,wBACqB,KAA5B,KADO;AAAA,UACD,QADC,eACD,QADC;AAAA,UACWI,KADX,eACWA,KADX;AAGP,aAAA,aACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,IAAA,EACIC,UAAAA,QAAD;AAAA,eAAA,aACC,KAAA,CAAA,aAAA,CAAC,aAAD,CAAA,QAAA,EAAA,IAAA,EACIC,UAAAA,OAAD;AAAA,iBAAA,aACC,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA;AAAgB,YAAA,OAAO,EAAEA;AAAzB,WAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA;AAAkB,YAAA,KAAK,EAAED;AAAzB,WAAA,EAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA;AAAe,YAAA,KAAK,EAAED;AAAtB,WAAA,EAPd,QAOc,CADF,CADF,CADD;AAAA,SADH,CADD;AAAA,OADH,CADF;AAeD;;;;EAtBkBF,KAAK,CAA1B,S;;gBAAMD,M,UAEUE,U;;AAuBhB,eAAeI,SAAS,CAAxB,MAAwB,CAAxB","sourcesContent":["import * as React from 'react';\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext, PortalMethods } from './PortalHost';\nimport {\n  Provider as SettingsProvider,\n  Consumer as SettingsConsumer,\n} from '../../core/settings';\nimport { ThemeProvider, withTheme } from '../../core/theming';\n\ntype Props = {\n  /**\n   * Content of the `Portal`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n};\n\n/**\n * Portal allows to render a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal>\n *     <Text>This is rendered at a different place</Text>\n *   </Portal>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Portal extends React.Component<Props> {\n  // @component ./PortalHost.tsx\n  static Host = PortalHost;\n\n  render() {\n    const { children, theme } = this.props;\n\n    return (\n      <SettingsConsumer>\n        {(settings) => (\n          <PortalContext.Consumer>\n            {(manager) => (\n              <PortalConsumer manager={manager as PortalMethods}>\n                <SettingsProvider value={settings}>\n                  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n                </SettingsProvider>\n              </PortalConsumer>\n            )}\n          </PortalContext.Consumer>\n        )}\n      </SettingsConsumer>\n    );\n  }\n}\n\nexport default withTheme(Portal);\n"]},"metadata":{},"sourceType":"module"}