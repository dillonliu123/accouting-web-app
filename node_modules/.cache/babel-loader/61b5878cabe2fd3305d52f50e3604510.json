{"ast":null,"code":"var _jsxFileName = \"/Users/dillonliu/Develop/GitHub/accouting-web-app/src/components/pages/Accounts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Title from \"../Title\";\nimport Button from \"@material-ui/core/Button\";\nimport AccountsList from \"../AccountsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BootstrapInput = withStyles(theme => ({\n  root: {\n    'label + &': {\n      marginTop: theme.spacing(3)\n    }\n  },\n  input: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.background.paper,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    padding: '10px 26px 10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: ['-apple-system', 'BlinkMacSystemFont', '\"Segoe UI\"', 'Roboto', '\"Helvetica Neue\"', 'Arial', 'sans-serif', '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)'\n    }\n  }\n}))(InputBase);\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1)\n  },\n  addButton: {\n    marginTop: theme.spacing(4),\n    marginLeft: theme.spacing(5),\n    fontSize: 25,\n    height: 41\n  },\n  container: {\n    width: \"100%\"\n  },\n  input: {\n    border: \"1px solid #ced4da\",\n    padding: \"10px 26px 10px 12px\",\n    position: \"relative\",\n    fontSize: \"16px\",\n    transition: \"border-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n    fontFamily: \"-apple-system,BlinkMacSystemFont\",\n    borderRadius: \"4px\",\n    backgroundColor: \"#fff\",\n    marginTop: 25\n  }\n}));\n\nconst AddingAccountForm = ({\n  accountName,\n  setAccountName,\n  type,\n  setType,\n\n  /*drcr, setdrcr,*/\n  money,\n  setMoney,\n  setAccounts,\n  accounts\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.margin,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        style: {\n          transform: \"translate(0, 1.5px) scale(0.75)\"\n        },\n        children: \"Account Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.input,\n        value: accountName,\n        onChange: e => {\n          setAccountName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.margin,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        value: type,\n        input: /*#__PURE__*/_jsxDEV(BootstrapInput, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 28\n        }, this),\n        onChange: event => {\n          setType(event.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Asset\",\n          children: \"Asset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Liability\",\n          children: \"Liability\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Expense\",\n          children: \"Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Revenue\",\n          children: \"Revenue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: \"Common Shares\",\n          children: \"Common Shares\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      className: classes.margin,\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        style: {\n          transform: \"translate(0, 1.5px) scale(0.75)\"\n        },\n        children: \"Amount of Money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.input,\n        onChange: e => {\n          const re = /^[0-9\\b]+$/;\n\n          if (e.target.value.charAt(0) !== '$' && re.test(e.target.value)) {\n            setMoney(\"$\" + e.target.value);\n          } else if (re.test(e.target.value.substr(1)) || e.target.value.charAt(0) === '$' && e.target.value.substr(1) === \"\") {\n            setMoney(e.target.value);\n          }\n        },\n        value: money\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.addButton,\n      onClick: e => {\n        let drcr = type === \"Asset\" || type === \"Expense\" ? \"DR\" : \"CR\";\n        let newItem = {\n          accountName: accountName,\n          type: type,\n          drcr: drcr,\n          money: money.substr(1),\n          key: accountName\n        };\n        setAccounts(accounts.concat(newItem));\n        e.preventDefault();\n        console.log(accounts);\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)]\n  }, \"Container\", true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddingAccountForm, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddingAccountForm;\n\nfunction Accounts(props) {\n  _s2();\n\n  const [accountName, setAccountName] = React.useState(\"\");\n  const [type, setType] = React.useState(\"Asset\"); // const [drcr, setdrcr] = React.useState(\"DR\")\n\n  const [money, setMoney] = React.useState(\"\");\n  props.accounts.return( /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"80%\",\n      margin: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      titleName: \"Accounts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddingAccountForm, {\n      accountName: accountName,\n      setAccountName: setAccountName,\n      type: type,\n      setType: setType // drcr={drcr}\n      // setdrcr={setdrcr}\n      ,\n      money: money,\n      setMoney: setMoney,\n      setAccounts: props.setAccounts,\n      accounts: props.accounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AccountsList, {\n      accounts: props.accounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 9\n  }, this));\n}\n\n_s2(Accounts, \"aIbllv2PDsOi48G1sxPejqWEJ7o=\");\n\n_c2 = Accounts;\nexport default Accounts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddingAccountForm\");\n$RefreshReg$(_c2, \"Accounts\");","map":{"version":3,"sources":["/Users/dillonliu/Develop/GitHub/accouting-web-app/src/components/pages/Accounts.js"],"names":["React","FormControl","InputLabel","InputBase","Select","withStyles","TextField","MenuItem","Container","makeStyles","Title","Button","AccountsList","BootstrapInput","theme","root","marginTop","spacing","input","borderRadius","position","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","useStyles","margin","addButton","marginLeft","height","container","width","AddingAccountForm","accountName","setAccountName","type","setType","money","setMoney","setAccounts","accounts","classes","transform","e","target","value","event","re","charAt","test","substr","drcr","newItem","key","concat","preventDefault","console","log","Accounts","props","useState","return"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Select from \"@material-ui/core/Select\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Container from \"@material-ui/core/Container\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Title from \"../Title\"\nimport Button from \"@material-ui/core/Button\";\nimport AccountsList from \"../AccountsList\";\n\nconst BootstrapInput = withStyles((theme) => ({\n    root: {\n        'label + &': {\n            marginTop: theme.spacing(3),\n        },\n    },\n    input: {\n        borderRadius: 4,\n        position: 'relative',\n        backgroundColor: theme.palette.background.paper,\n        border: '1px solid #ced4da',\n        fontSize: 16,\n        padding: '10px 26px 10px 12px',\n        transition: theme.transitions.create(['border-color', 'box-shadow']),\n        // Use the system font instead of the default Roboto font.\n        fontFamily: [\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n        ].join(','),\n        '&:focus': {\n            borderRadius: 4,\n            borderColor: '#80bdff',\n            boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n        },\n    },\n}))(InputBase);\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n        margin: theme.spacing(1)\n    },\n    addButton: {\n        marginTop: theme.spacing(4),\n        marginLeft: theme.spacing(5),\n        fontSize: 25,\n        height: 41\n    },\n    container: {\n        width: \"100%\"\n    },\n    input: {\n        border: \"1px solid #ced4da\",\n        padding: \"10px 26px 10px 12px\",\n        position: \"relative\",\n        fontSize: \"16px\",\n        transition: \"border-color 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        fontFamily: \"-apple-system,BlinkMacSystemFont\",\n        borderRadius: \"4px\",\n        backgroundColor: \"#fff\",\n        marginTop: 25\n    },\n}))\n\nconst AddingAccountForm = ({accountName, setAccountName, type, setType, /*drcr, setdrcr,*/ money, setMoney, setAccounts, accounts}) => {\n    const classes = useStyles();\n    return (\n        <Container className={classes.container} key={\"Container\"}>\n            <FormControl className={classes.margin}>\n                <InputLabel style={{transform: \"translate(0, 1.5px) scale(0.75)\"}}>Account Name</InputLabel>\n                <input className={classes.input} value={accountName} onChange={(e) => {setAccountName(e.target.value)}}/>\n            </FormControl>\n\n            <FormControl className={classes.margin}>\n                <InputLabel>Type</InputLabel>\n                <Select\n                    value={type}\n                    input={<BootstrapInput/>}\n                    onChange={(event) => {\n                        setType(event.target.value)\n                    }}\n                >\n                    <MenuItem value=\"Asset\">Asset</MenuItem>\n                    <MenuItem value=\"Liability\">Liability</MenuItem>\n                    <MenuItem value=\"Expense\">Expense</MenuItem>\n                    <MenuItem value=\"Revenue\">Revenue</MenuItem>\n                    <MenuItem value=\"Common Shares\">Common Shares</MenuItem>\n                </Select>\n            </FormControl>\n\n {/*           <FormControl className={classes.margin}>\n                <InputLabel>DR/CR</InputLabel>\n                <Select\n                    value={drcr}\n                    input={<BootstrapInput/>}\n                    onChange={(event) => {\n                        setdrcr(event.target.value)\n                    }}\n                >\n                    <MenuItem value=\"DR\">DR</MenuItem>\n                    <MenuItem value=\"CR\">CR</MenuItem>\n                </Select>\n            </FormControl>*/}\n\n            <FormControl className={classes.margin}>\n                <InputLabel style={{transform: \"translate(0, 1.5px) scale(0.75)\"}}>Amount of Money</InputLabel>\n                <input\n                    className={classes.input}\n                    onChange={(e)=>{\n                        const re = /^[0-9\\b]+$/\n                        if (e.target.value.charAt(0) !== '$' && re.test(e.target.value)) {\n                            setMoney(\"$\"+e.target.value)\n                        }\n                        else if (re.test(e.target.value.substr(1)) || e.target.value.charAt(0) === '$' && e.target.value.substr(1) === \"\") {\n                            setMoney(e.target.value)\n                        }\n                    }}\n                    value={money}\n                />\n            </FormControl>\n\n            <Button\n                variant={\"contained\"}\n                color={\"primary\"}\n                className={classes.addButton}\n                onClick={(e) => {\n                    let drcr = (type === \"Asset\" || type === \"Expense\") ? \"DR\" : \"CR\"\n                    let newItem = {\n                        accountName: accountName,\n                        type: type,\n                        drcr: drcr,\n                        money: money.substr(1),\n                        key: accountName\n                    }\n                    setAccounts(accounts.concat(newItem))\n                    e.preventDefault()\n                    console.log(accounts)\n                }}\n            >+</Button>\n        </Container>\n    )\n}\n\nfunction Accounts(props) {\n    const [accountName, setAccountName] = React.useState(\"\")\n    const [type, setType] = React.useState(\"Asset\")\n    // const [drcr, setdrcr] = React.useState(\"DR\")\n    const [money, setMoney] = React.useState(\"\")\n\n    props.accounts.\n    return (\n        <div style={{width: \"80%\", margin: 20}}>\n            <Title titleName={\"Accounts\"}/>\n            <AddingAccountForm\n                accountName={accountName}\n                setAccountName={setAccountName}\n                type={type}\n                setType={setType}\n                // drcr={drcr}\n                // setdrcr={setdrcr}\n                money={money}\n                setMoney={setMoney}\n                setAccounts={props.setAccounts}\n                accounts={props.accounts}\n            />\n            <AccountsList accounts={props.accounts} />\n        </div>\n    )\n}\n\nexport default Accounts\n\n"]},"metadata":{},"sourceType":"module"}